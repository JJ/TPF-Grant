{
  "body": "Ref: https://docs.perl6.org/language/nativecall#Passing_and_Returning_Values\r\n \r\nThe docs say there is no support for calling C functions with \"int\" because Perl6's \"int\" is not guaranteed to be the same size as a C int.  The docs list other platform-dependent-size types which _are_ supported,\r\nsuch as \"long\", \"longlong\" and \"ulong\", but emphaticically say:\r\n\r\n    \"Don't use Perl 6 native types like int or num, as they don't have to \r\n    correspond to the local C equivalent (e.g., Perl 6's int can be 8 bytes \r\n    but C's int is only 4 bytes).\"\r\n\r\nThis is pretty seriously confusing, IMO, and will forever cause programmers to write non-portable NativeCall interfaces.  \r\n\r\nI'm wondering *why* this is the case, i.e., that a P6 \"int\" can not be guaranteed to match \"int\" in C?  Does perl6 internally use \"int\" in its implementation, or does the P6 language spec specify a minimum size?\r\n\r\nIf P6 \"int\" really must not necessarily match C \"int\", then:\r\n\r\n    1) P6 should define another so-called native type which _is_ \r\n       guaranteed to be a \"C int\" on the execution platform; and\r\n\r\n    2) Use of \"int\" in a CStruct, or similar context should cause an error\r\n       to protect programmers from thinking they are writing portable code.\r\n\r\n(Also: Need support for C \"unsigned\" a.k.a. \"unsigned int\")\r\n\r\nNote: In C, \"int\" and \"unsigned\", have a platform-dependent size, ultimately determined by the C compiler & compile-time-options.\r\n\r\nANSI C99 specifies that \"int\" may have any size >= 16 bits.\r\n",
  "author_association": "NONE",
  "milestone": null,
  "html_url": "https://github.com/perl6/doc/issues/1771",
  "events_url": "https://api.github.com/repos/perl6/doc/issues/1771/events",
  "url": "https://api.github.com/repos/perl6/doc/issues/1771",
  "state": "open",
  "labels": [
    {
      "url": "https://api.github.com/repos/perl6/doc/labels/docs",
      "default": false,
      "name": "docs",
      "color": "5DE0FA",
      "id": 244843225,
      "node_id": "MDU6TGFiZWwyNDQ4NDMyMjU="
    },
    {
      "url": "https://api.github.com/repos/perl6/doc/labels/update",
      "default": false,
      "name": "update",
      "color": "5DE0FA",
      "id": 676800676,
      "node_id": "MDU6TGFiZWw2NzY4MDA2NzY="
    }
  ],
  "title": "NativeCall has no portable support for C \"int\" (?)",
  "labels_url": "https://api.github.com/repos/perl6/doc/issues/1771/labels{/name}",
  "closed_at": null,
  "assignees": [
    
  ],
  "locked": false,
  "repository_url": "https://api.github.com/repos/perl6/doc",
  "closed_by": null,
  "comments": 16,
  "user": {
    "events_url": "https://api.github.com/users/jimav/events{/privacy}",
    "following_url": "https://api.github.com/users/jimav/following{/other_user}",
    "followers_url": "https://api.github.com/users/jimav/followers",
    "html_url": "https://github.com/jimav",
    "url": "https://api.github.com/users/jimav",
    "site_admin": false,
    "type": "User",
    "organizations_url": "https://api.github.com/users/jimav/orgs",
    "gists_url": "https://api.github.com/users/jimav/gists{/gist_id}",
    "avatar_url": "https://avatars0.githubusercontent.com/u/1262272?v=4",
    "id": 1262272,
    "starred_url": "https://api.github.com/users/jimav/starred{/owner}{/repo}",
    "received_events_url": "https://api.github.com/users/jimav/received_events",
    "gravatar_id": "",
    "repos_url": "https://api.github.com/users/jimav/repos",
    "subscriptions_url": "https://api.github.com/users/jimav/subscriptions",
    "node_id": "MDQ6VXNlcjEyNjIyNzI=",
    "login": "jimav"
  },
  "id": 296562656,
  "updated_at": "2018-07-29T04:58:25Z",
  "assignee": null,
  "created_at": "2018-02-12T23:32:55Z",
  "number": 1771,
  "comments_url": "https://api.github.com/repos/perl6/doc/issues/1771/comments",
  "node_id": "MDU6SXNzdWUyOTY1NjI2NTY="
}