{
  "author_association": "CONTRIBUTOR",
  "created_at": "2017-02-27T07:55:56Z",
  "assignee": null,
  "locked": false,
  "user": {
    "starred_url": "https://api.github.com/users/briandfoy/starred{/owner}{/repo}",
    "html_url": "https://github.com/briandfoy",
    "gravatar_id": "",
    "login": "briandfoy",
    "site_admin": false,
    "type": "User",
    "gists_url": "https://api.github.com/users/briandfoy/gists{/gist_id}",
    "id": 22255,
    "events_url": "https://api.github.com/users/briandfoy/events{/privacy}",
    "following_url": "https://api.github.com/users/briandfoy/following{/other_user}",
    "url": "https://api.github.com/users/briandfoy",
    "avatar_url": "https://avatars3.githubusercontent.com/u/22255?v=4",
    "node_id": "MDQ6VXNlcjIyMjU1",
    "received_events_url": "https://api.github.com/users/briandfoy/received_events",
    "repos_url": "https://api.github.com/users/briandfoy/repos",
    "organizations_url": "https://api.github.com/users/briandfoy/orgs",
    "subscriptions_url": "https://api.github.com/users/briandfoy/subscriptions",
    "followers_url": "https://api.github.com/users/briandfoy/followers"
  },
  "updated_at": "2018-05-20T10:45:10Z",
  "html_url": "https://github.com/perl6/doc/issues/1223",
  "comments_url": "https://api.github.com/repos/perl6/doc/issues/1223/comments",
  "labels_url": "https://api.github.com/repos/perl6/doc/issues/1223/labels{/name}",
  "body": "- [x] Decide if its \"void\" or \"sink\" context. It's not like most Perlers even know there's a \"void\" context so referring to it doesn't help most people. Or, always say void context.\r\n- [x] Document void context, probably next to other contexts, possibly in a document of basic syntax (duplicate of #732). The word \"context\" only shows up three times in [syntax](https://docs.perl6.org/language/syntax).\r\n- [ ] Document when a Proc object in sink context will throw an exception, which is only after its run and it thinks the exit code was nonzero\r\n- [ ] Same for Proc::Async\r\n- [ ] Fix some ambiguous wording in the FAQ that can seem to say the opposite of Failure.\r\n- [x] Add sink and words related to it to the glossary\r\n\r\nIn [RT 130715](https://rt.perl.org/Ticket/Display.html?id=130715), I report a problem with a Proc object throwing an exception. Since the last thing I did in the example was a call to `.close`, I attributed it to that action. It appears however, that doing nothing with the return value sinks it. That behavior is documented for the method sink, but that on its own implies it happens through affirmative action instead of implicitly.\r\n\r\nHowever, the behavior of a Proc object in sink context isn't documented (perhaps #732 relates to this) that a Proc object will do this. There's a `.sink` method that says it will do this, but it doesn't say it's automatically called. Indeed, the only literal match for \"sink\" in docs.perl6.org search menu leads to Proc. It's also mentioned in [traps](https://docs.perl6.org/language/traps), but it uses the active \"sinking\" when this is really a problem of lack of action. \r\n\r\n[Proc::Async](https://docs.perl6.org/type/Proc$COLON$COLONAsync) mentions sink, but it doesn't say that not handling the result of await is from the sink context. By a stretch, if you know that was a thing, you'd get there eventually. But, almost no one knows that's a thing.\r\n\r\n[5to6-perlfunc](https://docs.perl6.org/language/5to6-perlfunc) says that a `.sink` will be called when an object finds itself in \"void context\". As a nit, a Perl 6 object would never be in a context the language doesn't have. This very important tidbit about the language needs to be discussed on its own merits in a document that focuses on general syntax instead of particular classes. This relates to the glib statement I make in Perl classes: Python has poor docs organized well while Perl (5) has great documentation organized poorly. \r\n\r\n[faq](https://docs.perl6.org/language/faq) mentions sink, but only in relationship to Failure objects and \"sinking\" an object does the opposite of what I've shown so far. It appears to say it discards the error because there's a problem with parallel structure and pronouns in that sentence. The Failure docs are direct \"Sink (void) context causes a Failure to throw, i.e. turn into a normal exception.\" Proc is not so direct, and neither is Proc::Async.\r\n\r\n[Block](https://docs.perl6.org/type/Block) mentions that bare blocks in sink context execute immediately. ",
  "repository_url": "https://api.github.com/repos/perl6/doc",
  "closed_at": null,
  "comments": 2,
  "assignees": [
    
  ],
  "milestone": null,
  "state": "open",
  "id": 210411639,
  "closed_by": null,
  "labels": [
    {
      "default": false,
      "id": 244870541,
      "color": "f72bc1",
      "url": "https://api.github.com/repos/perl6/doc/labels/big",
      "node_id": "MDU6TGFiZWwyNDQ4NzA1NDE=",
      "name": "big"
    },
    {
      "default": false,
      "id": 244843225,
      "color": "5DE0FA",
      "url": "https://api.github.com/repos/perl6/doc/labels/docs",
      "node_id": "MDU6TGFiZWwyNDQ4NDMyMjU=",
      "name": "docs"
    },
    {
      "default": false,
      "id": 676800676,
      "color": "5DE0FA",
      "url": "https://api.github.com/repos/perl6/doc/labels/update",
      "node_id": "MDU6TGFiZWw2NzY4MDA2NzY=",
      "name": "update"
    }
  ],
  "number": 1223,
  "node_id": "MDU6SXNzdWUyMTA0MTE2Mzk=",
  "events_url": "https://api.github.com/repos/perl6/doc/issues/1223/events",
  "url": "https://api.github.com/repos/perl6/doc/issues/1223",
  "title": "Document Proc failures in sink context, and other things in sink context too"
}